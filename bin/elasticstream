#!/usr/bin/env python

import os
import sys
import argparse
import json

########################################################################################################################
# allow this script to be run from bin dir without install
########################################################################################################################
path = os.path.abspath(sys.argv[0])
while os.path.dirname(path) != path:
    if os.path.exists(os.path.join(path, 'elasticstream', '__init__.py')):
        sys.path.insert(0, path)
        break
    path = os.path.dirname(path)
from elasticstream import ElasticStream
########################################################################################################################

parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('-u', '--url', help='Elasticsearch REST endpoint URL', default='localhost:9200')
parser.add_argument('-i', '--index', help='Elasticsearch index to stream (wildcards allowed).', default='*')
parser.add_argument('-d', '--dsl', help='Elasticsearch DSL query or @file containing query.', default='{"query": {"match_all": {}}}')
parser.add_argument('-k', '--keepalive', help='Duration to keep scroll alive. Tune according to --size.', default='1m')
parser.add_argument('-s', '--size', help='Number of hits to scroll at once. Tune according to sharding.', default='10')
parser.add_argument('-t', '--test', help='Test the query, print the total hits, and exit.', action='store_true')
args = parser.parse_args()

# allow curl-like @syntax
if args.dsl.startswith('@'):
    with open(args.dsl[1:]) as f:
        args.dsl = json.dumps(json.load(f))

stream = ElasticStream(args.url, args.index, args.dsl, scroll_keepalive=args.keepalive, scroll_size=args.size)

if args.test:
    print 'URL:\t\t%s' % stream.url
    print 'Index:\t\t%s' % stream.index
    print 'DSL query:\t%s' % stream.dsl
    print 'Hits (total):\t%d' % stream.hits_total
else:
    for hit in stream:
        print hit
